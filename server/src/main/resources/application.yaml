redis:
  host: ${REDIS_HOST:localhost}        # Redis 서버 호스트 (AWS EC2 호스트 이름 또는 IP)
  port: 6379                        # Redis 포트 (기본값: 6379)
  password: ${REDIS_PASSWORD:1234}       # Redis 인증 비밀번호 (없다면 생략 가능)
  timeout: 2000                     # 연결 타임아웃 (ms 단위)
  lettuce:
    pool:
      max-active: 10              # 최대 연결 수
      max-idle: 5                 # 유휴 상태 연결의 최대 수
      min-idle: 1
server:
  port: 8080
spring:
  mvc:
    hiddenmethod:
      filter:
        enabled: true
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false
    template-resolver-order: 1
    check-template: true
    check-template-location: true
  session:
    store-type: redis
    redis:
      namespace: spring:session
      flush-mode: on_save
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false  # SQL 로그 끄기
    properties:
      hibernate:
        format_sql: false  # SQL 포맷팅 끄기
        dialect: ${HIBERNATE_DIALECT:org.hibernate.dialect.MySQLDialect}
        order_inserts: true
        order_updates: true
        globally_quoted_identifiers: false
        hbm2ddl:
          auto: none
          schema_generation:
            create_source: metadata
            create_order: tables-then-constraints
            scripts:
              action: create
              create-target: create.sql
              drop-target: drop.sql
        cache:
          use_query_cache: false
          use_second_level_cache: false
          use_structured_entries: false
          use_minimal_puts: false
          region:
            factory_class: org.hibernate.cache.internal.NoCachingRegionFactory
        generate_statistics: false
  datasource:
    driver-class-name: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:com.mysql.cj.jdbc.Driver}
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/cashticket?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

# 로그 레벨 설정
logging:
  level:
    root: INFO
    com.cashticket.service.AuctionService: WARN  # AuctionService 로그 줄이기
    com.cashticket: DEBUG  # 우리 애플리케이션 패키지는 DEBUG 레벨
    org.springframework.web: DEBUG  # Spring Web DEBUG
    org.hibernate.SQL: WARN  # SQL 로그 끄기
    org.hibernate.type.descriptor.sql.BasicBinder: WARN  # SQL 파라미터 로그 끄기
    org.springframework.security: DEBUG  # Spring Security DEBUG
    org.springframework.scheduling: WARN  # 스케줄러 로그 줄이기
    org.springframework.messaging: ERROR  # WebSocket 메시징 로그 완전 끄기
    org.springframework.web.SimpLogging: ERROR  # WebSocket SimpLogging 완전 끄기
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Spring Boot Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
    prometheus:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: webapp